[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\adria\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\adria\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.1 (Azul Systems, Inc. Java 16.0.1)
[debug]       Load.loadUnit: plugins took 121.9391ms
[debug]       Load.loadUnit: defsScala took 0.4592ms
[debug] [Loading] Scanning directory C:\Users\adria\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\adria\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 29.7923 ms
[debug]           Load.resolveProject(global-plugins) took 55.5366ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\adria\.sbt\1.0\plugins, plugins: List(<none>))) took 125.3581ms
[debug] [Loading] Done in C:\Users\adria\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 155.785ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3332ms
[debug]     Load.loadUnit(file:/C:/Users/adria/.sbt/1.0/plugins/, ...) took 292.8433ms
[debug]   Load.apply: load took 551.5745ms
[debug]   Load.apply: resolveProjects took 8.5265ms
[debug]   Load.apply: finalTransforms took 90.9744ms
[debug]   Load.apply: config.delegates took 12.2548ms
[debug]   Load.apply: Def.make(settings)... took 601.4892ms
[debug]   Load.apply: structureIndex took 127.2004ms
[debug]   Load.apply: mkStreams took 2.0111ms
[info] loading global plugins from C:\Users\adria\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4154.402ms
[debug]           Load.loadUnit: plugins took 54.1199ms
[debug]           Load.loadUnit: defsScala took 0.0091ms
[debug] [Loading] Scanning directory D:\adria\Documents\TercerCiclo\Programación Funcional y Reactiva\ProyectoFinal\project
[debug]             Load.loadUnit: mkEval took 11.8693ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\adria\Documents\TercerCiclo\Programación Funcional y Reactiva\ProyectoFinal\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.5404 ms
[info] loading settings for project proyectofinal-build from idea.sbt ...
[debug]               Load.resolveProject(proyectofinal-build) took 4.0206ms
[debug]             Load.loadTransitive: finalizeProject(Project(id proyectofinal-build, base: D:\adria\Documents\TercerCiclo\Programación Funcional y Reactiva\ProyectoFinal\project, plugins: List(<none>))) took 7.3389ms
[debug] [Loading] Done in D:\adria\Documents\TercerCiclo\Programación Funcional y Reactiva\ProyectoFinal\project, returning: (proyectofinal-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3567.0996ms
[debug]           Load.loadUnit: cleanEvalClasses took 10.1118ms
[debug]         Load.loadUnit(file:/D:/adria/Documents/TercerCiclo/Programación%20Funcional%20y%20Reactiva/ProyectoFinal/project/, ...) took 3633.3699ms
[debug]       Load.apply: load took 3635.9575ms
[debug]       Load.apply: resolveProjects took 0.217ms
[debug]       Load.apply: finalTransforms took 58.0765ms
[debug]       Load.apply: config.delegates took 0.754ms
[debug]       Load.apply: Def.make(settings)... took 255.3717ms
[debug]       Load.apply: structureIndex took 43.2917ms
[debug]       Load.apply: mkStreams took 0.0043ms
[info] loading project definition from D:\adria\Documents\TercerCiclo\Programación Funcional y Reactiva\ProyectoFinal\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 8221.7916ms
[debug]     Load.loadUnit: defsScala took 0.005ms
[debug] [Loading] Scanning directory D:\adria\Documents\TercerCiclo\Programación Funcional y Reactiva\ProyectoFinal
[debug]       Load.loadUnit: mkEval took 0.5264ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\adria\Documents\TercerCiclo\Programación Funcional y Reactiva\ProyectoFinal, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.8558 ms
[info] loading settings for project proyectofinal from build.sbt ...
[debug]         Load.resolveProject(proyectofinal) took 55.4929ms
[debug]       Load.loadTransitive: finalizeProject(Project(id proyectofinal, base: D:\adria\Documents\TercerCiclo\Programación Funcional y Reactiva\ProyectoFinal, plugins: List(<none>))) took 59.8103ms
[debug] [Loading] Done in D:\adria\Documents\TercerCiclo\Programación Funcional y Reactiva\ProyectoFinal, returning: (proyectofinal)
[debug]     Load.loadUnit: loadedProjectsRaw took 2094.3434ms
[debug]     Load.loadUnit: cleanEvalClasses took 54.5123ms
[debug]   Load.loadUnit(file:/D:/adria/Documents/TercerCiclo/Programación%20Funcional%20y%20Reactiva/ProyectoFinal/, ...) took 10372.4869ms
[debug] Load.apply: load took 10376.5634ms
[debug] Load.apply: resolveProjects took 0.1792ms
[debug] Load.apply: finalTransforms took 45.7275ms
[debug] Load.apply: config.delegates took 0.4468ms
[debug] Load.apply: Def.make(settings)... took 88.3371ms
[debug] Load.apply: structureIndex took 34.1359ms
[debug] Load.apply: mkStreams took 0.0027ms
[info] set current project to ProyectoFinal (in build file:/D:/adria/Documents/TercerCiclo/Programación%20Funcional%20y%20Reactiva/ProyectoFinal/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 52880 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 52880, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ProyectoFinal (in build file:/D:/adria/Documents/TercerCiclo/Programación%20Funcional%20y%20Reactiva/ProyectoFinal/)
[debug] > Exec(idea-shell, None, None)
